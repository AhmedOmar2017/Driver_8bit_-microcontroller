

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Apr 18 17:54:19 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.40
    25                           ; Generated 17/11/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F877A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  0087                     	;# 
   158  0088                     	;# 
   159  0089                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  0007                     	;# 
   187  0008                     	;# 
   188  0009                     	;# 
   189  000A                     	;# 
   190  000B                     	;# 
   191  000C                     	;# 
   192  000D                     	;# 
   193  000E                     	;# 
   194  000E                     	;# 
   195  000F                     	;# 
   196  0010                     	;# 
   197  0011                     	;# 
   198  0012                     	;# 
   199  0013                     	;# 
   200  0014                     	;# 
   201  0015                     	;# 
   202  0015                     	;# 
   203  0016                     	;# 
   204  0017                     	;# 
   205  0018                     	;# 
   206  0019                     	;# 
   207  001A                     	;# 
   208  001B                     	;# 
   209  001B                     	;# 
   210  001C                     	;# 
   211  001D                     	;# 
   212  001E                     	;# 
   213  001F                     	;# 
   214  0081                     	;# 
   215  0085                     	;# 
   216  0086                     	;# 
   217  0087                     	;# 
   218  0088                     	;# 
   219  0089                     	;# 
   220  008C                     	;# 
   221  008D                     	;# 
   222  008E                     	;# 
   223  0091                     	;# 
   224  0092                     	;# 
   225  0093                     	;# 
   226  0094                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  018C                     	;# 
   238  018D                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  0007                     	;# 
   247  0008                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  000D                     	;# 
   253  000E                     	;# 
   254  000E                     	;# 
   255  000F                     	;# 
   256  0010                     	;# 
   257  0011                     	;# 
   258  0012                     	;# 
   259  0013                     	;# 
   260  0014                     	;# 
   261  0015                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001D                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  0081                     	;# 
   275  0085                     	;# 
   276  0086                     	;# 
   277  0087                     	;# 
   278  0088                     	;# 
   279  0089                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  008E                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0094                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299                           
   300                           	psect	strings
   301  0003                     __pstrings:
   302  0003                     stringtab:
   303  0003                     __stringtab:
   304  0003                     stringcode:	
   305                           ;	String table - string pointers are 1 byte each
   306                           
   307  0003                     stringdir:
   308  0003  3000               	movlw	high stringdir
   309  0004  008A               	movwf	10
   310  0005  0804               	movf	4,w
   311  0006  0A84               	incf	4,f
   312  0007  0782               	addwf	2,f
   313  0008                     __stringbase:
   314  0008  3400               	retlw	0
   315  0009                     __end_of__stringtab:
   316  0009                     STR_1:
   317  0009  3441               	retlw	65	;'A'
   318  000A  3468               	retlw	104	;'h'
   319  000B  346D               	retlw	109	;'m'
   320  000C  3465               	retlw	101	;'e'
   321  000D  3464               	retlw	100	;'d'
   322  000E  3420               	retlw	32	;' '
   323  000F  344F               	retlw	79	;'O'
   324  0010  346D               	retlw	109	;'m'
   325  0011  3461               	retlw	97	;'a'
   326  0012  3472               	retlw	114	;'r'
   327  0013  3400               	retlw	0
   328                           
   329                           	psect	cinit
   330  07FC                     start_initialization:	
   331                           ; #config settings
   332                           
   333  07FC                     __initialization:
   334  07FC                     end_of_initialization:	
   335                           ;End of C runtime variable initialization code
   336                           
   337  07FC                     __end_of__initialization:
   338  07FC  0183               	clrf	3
   339  07FD  120A  118A  2E88   	ljmp	_main	;jump to C main() function
   340                           
   341                           	psect	cstackCOMMON
   342  0070                     __pcstackCOMMON:
   343  0070                     ?_GPIO_INIT:
   344  0070                     ?_LCD_INIT:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_LCD_Print:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_PinDir:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_PinRead:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_PinWrite:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_SelectADC:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_PortDir:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?_PortWrite:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_LCD_Command:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_LCD_Data:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ?_main:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     PinDir@pin:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     PortDir@state:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     PortWrite@value:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     PinWrite@pin:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     PinRead@pin:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     SelectADC@value:	
   393                           ; 1 bytes @ 0x0
   394                           
   395                           
   396                           ; 1 bytes @ 0x0
   397  0070                     	ds	1
   398  0071                     ??_PinRead:
   399  0071                     ??_SelectADC:	
   400                           ; 1 bytes @ 0x1
   401                           
   402  0071                     ??_PortDir:	
   403                           ; 1 bytes @ 0x1
   404                           
   405  0071                     ??_PortWrite:	
   406                           ; 1 bytes @ 0x1
   407                           
   408  0071                     PinDir@state:	
   409                           ; 1 bytes @ 0x1
   410                           
   411  0071                     PinWrite@stat:	
   412                           ; 1 bytes @ 0x1
   413                           
   414                           
   415                           ; 1 bytes @ 0x1
   416  0071                     	ds	1
   417  0072                     ??_PinDir:
   418  0072                     ??_PinWrite:	
   419                           ; 1 bytes @ 0x2
   420                           
   421                           
   422                           ; 1 bytes @ 0x2
   423  0072                     	ds	2
   424  0074                     PortDir@Base:
   425  0074                     PortWrite@Base:	
   426                           ; 1 bytes @ 0x4
   427                           
   428  0074                     PinRead@Base:	
   429                           ; 1 bytes @ 0x4
   430                           
   431  0074                     SelectADC@Base:	
   432                           ; 1 bytes @ 0x4
   433                           
   434                           
   435                           ; 1 bytes @ 0x4
   436  0074                     	ds	1
   437  0075                     ??_GPIO_INIT:
   438                           
   439                           ; 1 bytes @ 0x5
   440  0075                     	ds	1
   441  0076                     PinDir@Base:
   442  0076                     PinWrite@Base:	
   443                           ; 1 bytes @ 0x6
   444                           
   445                           
   446                           ; 1 bytes @ 0x6
   447  0076                     	ds	1
   448  0077                     ??_LCD_Command:
   449  0077                     ??_LCD_Data:	
   450                           ; 1 bytes @ 0x7
   451                           
   452                           
   453                           ; 1 bytes @ 0x7
   454  0077                     	ds	2
   455  0079                     LCD_Command@value:
   456  0079                     LCD_Data@value:	
   457                           ; 1 bytes @ 0x9
   458                           
   459                           
   460                           ; 1 bytes @ 0x9
   461  0079                     	ds	1
   462  007A                     ??_LCD_INIT:
   463  007A                     ??_LCD_Print:	
   464                           ; 1 bytes @ 0xA
   465                           
   466                           
   467                           ; 1 bytes @ 0xA
   468  007A                     	ds	1
   469  007B                     LCD_Print@str:
   470                           
   471                           ; 1 bytes @ 0xB
   472  007B                     	ds	1
   473  007C                     LCD_Print@i:
   474                           
   475                           ; 1 bytes @ 0xC
   476  007C                     	ds	1
   477                           
   478                           	psect	cstackBANK0
   479  0020                     __pcstackBANK0:
   480  0020                     ??_main:
   481                           
   482                           ; 1 bytes @ 0x0
   483  0020                     	ds	3
   484                           
   485                           	psect	maintext
   486  0688                     __pmaintext:	
   487 ;;
   488 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   489 ;;
   490 ;; *************** function _main *****************
   491 ;; Defined at:
   492 ;;		line 14 in file "main.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;		None
   495 ;; Auto vars:     Size  Location     Type
   496 ;;		None
   497 ;; Return value:  Size  Location     Type
   498 ;;                  1    wreg      void 
   499 ;; Registers used:
   500 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   501 ;; Tracked objects:
   502 ;;		On entry : B00/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   506 ;;      Params:         0       0       0       0       0
   507 ;;      Locals:         0       0       0       0       0
   508 ;;      Temps:          0       3       0       0       0
   509 ;;      Totals:         0       3       0       0       0
   510 ;;Total ram usage:        3 bytes
   511 ;; Hardware stack levels required when called: 3
   512 ;; This function calls:
   513 ;;		_GPIO_INIT
   514 ;;		_LCD_INIT
   515 ;;		_LCD_Print
   516 ;;		_PinDir
   517 ;;		_PinRead
   518 ;;		_PinWrite
   519 ;; This function is called by:
   520 ;;		Startup code after reset
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524  0688                     _main:	
   525                           ;psect for function _main
   526                           
   527  0688                     l875:	
   528                           ;incstack = 0
   529                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   530                           
   531                           
   532                           ;main.c: 15:    GPIO_INIT();
   533  0688  120A  118A  2598  120A  118A  	fcall	_GPIO_INIT
   534                           
   535                           ;main.c: 16:    LCD_INIT();
   536  068D  120A  118A  26DB  120A  118A  	fcall	_LCD_INIT
   537                           
   538                           ;main.c: 17:    LCD_Print("Ahmed Omar");
   539  0692  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   540  0693  120A  118A  25FC  120A  118A  	fcall	_LCD_Print
   541                           
   542                           ;main.c: 21: PinDir(0x08, 0, output);
   543  0698  01F0               	clrf	PinDir@pin
   544  0699  01F1               	clrf	PinDir@state
   545  069A  3008               	movlw	8
   546  069B  120A  118A  2651  120A  118A  	fcall	_PinDir
   547                           
   548                           ;main.c: 22: PinDir(0x08, 1, input);
   549  06A0  01F0               	clrf	PinDir@pin
   550  06A1  0AF0               	incf	PinDir@pin,f
   551  06A2  01F1               	clrf	PinDir@state
   552  06A3  0AF1               	incf	PinDir@state,f
   553  06A4  3008               	movlw	8
   554  06A5  120A  118A  2651  120A  118A  	fcall	_PinDir
   555  06AA                     l19:	
   556                           ;main.c: 23: while(1){
   557                           
   558                           
   559                           ;main.c: 24:     if(PinRead(0x08, 1)){
   560  06AA  01F0               	clrf	PinRead@pin
   561  06AB  0AF0               	incf	PinRead@pin,f
   562  06AC  3008               	movlw	8
   563  06AD  120A  118A  25BF  120A  118A  	fcall	_PinRead
   564  06B2  3A00               	xorlw	0
   565  06B3  1903               	skipnz
   566  06B4  2EB6               	goto	u271
   567  06B5  2EB7               	goto	u270
   568  06B6                     u271:
   569  06B6  2ECF               	goto	l881
   570  06B7                     u270:
   571  06B7                     l877:
   572                           
   573                           ;main.c: 25:         PinWrite(0x08, 0, high);
   574  06B7  01F0               	clrf	PinWrite@pin
   575  06B8  01F1               	clrf	PinWrite@stat
   576  06B9  0AF1               	incf	PinWrite@stat,f
   577  06BA  3008               	movlw	8
   578  06BB  120A  118A  261E  120A  118A  	fcall	_PinWrite
   579  06C0                     l879:
   580                           
   581                           ;main.c: 26:          _delay((unsigned long)((500)*(4000000/4000.0)));
   582  06C0  3003               	movlw	3
   583  06C1  1283               	bcf	3,5	;RP0=0, select bank0
   584  06C2  1303               	bcf	3,6	;RP1=0, select bank0
   585  06C3  00A2               	movwf	??_main+2
   586  06C4  308A               	movlw	138
   587  06C5  00A1               	movwf	??_main+1
   588  06C6  3055               	movlw	85
   589  06C7  00A0               	movwf	??_main
   590  06C8                     u287:
   591  06C8  0BA0               	decfsz	??_main,f
   592  06C9  2EC8               	goto	u287
   593  06CA  0BA1               	decfsz	??_main+1,f
   594  06CB  2EC8               	goto	u287
   595  06CC  0BA2               	decfsz	??_main+2,f
   596  06CD  2EC8               	goto	u287
   597                           
   598                           ;main.c: 27:     }else{
   599  06CE  2EAA               	goto	l19
   600  06CF                     l881:
   601                           
   602                           ;main.c: 28:         PinWrite(0x08, 0, low);
   603  06CF  01F0               	clrf	PinWrite@pin
   604  06D0  01F1               	clrf	PinWrite@stat
   605  06D1  3008               	movlw	8
   606  06D2  120A  118A  261E  120A  118A  	fcall	_PinWrite
   607  06D7  2EAA               	goto	l19
   608  06D8  120A  118A  2800   	ljmp	start
   609  06DB                     __end_of_main:
   610                           
   611                           	psect	text1
   612  05BF                     __ptext1:	
   613 ;; *************** function _PinRead *****************
   614 ;; Defined at:
   615 ;;		line 67 in file "HAL.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;  Base            1    wreg     unsigned char 
   618 ;;  pin             1    0[COMMON] unsigned char 
   619 ;; Auto vars:     Size  Location     Type
   620 ;;  Base            1    4[COMMON] unsigned char 
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      unsigned char 
   623 ;; Registers used:
   624 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   630 ;;      Params:         1       0       0       0       0
   631 ;;      Locals:         1       0       0       0       0
   632 ;;      Temps:          3       0       0       0       0
   633 ;;      Totals:         5       0       0       0       0
   634 ;;Total ram usage:        5 bytes
   635 ;; Hardware stack levels used: 1
   636 ;; This function calls:
   637 ;;		Nothing
   638 ;; This function is called by:
   639 ;;		_main
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643  05BF                     _PinRead:	
   644                           ;psect for function _PinRead
   645                           
   646                           
   647                           ;incstack = 0
   648                           ; Regs used in _PinRead: [wreg-fsr0h+status,2+status,0]
   649                           ;PinRead@Base stored from wreg
   650  05BF  00F4               	movwf	PinRead@Base
   651  05C0                     l863:
   652                           
   653                           ;HAL.c: 68: if ((*(volatile uint8_t *)(Base)) & (1<<pin)) return 1;
   654  05C0  0874               	movf	PinRead@Base,w
   655  05C1  00F1               	movwf	??_PinRead
   656  05C2  01F2               	clrf	??_PinRead+1
   657  05C3  0871               	movf	??_PinRead,w
   658  05C4  0084               	movwf	4
   659  05C5  1783               	bsf	3,7
   660  05C6  1C72               	btfss	??_PinRead+1,0
   661  05C7  1383               	bcf	3,7
   662  05C8  3001               	movlw	1
   663  05C9  00F3               	movwf	??_PinRead+2
   664  05CA  0A70               	incf	PinRead@pin,w
   665  05CB  2DCE               	goto	u254
   666  05CC                     u255:
   667  05CC  1003               	clrc
   668  05CD  0DF3               	rlf	??_PinRead+2,f
   669  05CE                     u254:
   670  05CE  3EFF               	addlw	-1
   671  05CF  1D03               	skipz
   672  05D0  2DCC               	goto	u255
   673  05D1  0873               	movf	??_PinRead+2,w
   674  05D2  0500               	andwf	0,w
   675  05D3  1903               	btfsc	3,2
   676  05D4  2DD6               	goto	u261
   677  05D5  2DD7               	goto	u260
   678  05D6                     u261:
   679  05D6  2DD9               	goto	l871
   680  05D7                     u260:
   681  05D7                     l865:
   682  05D7  3001               	movlw	1
   683  05D8  2DDA               	goto	l76
   684  05D9                     l871:
   685  05D9  3000               	movlw	0
   686  05DA                     l76:
   687  05DA  0008               	return
   688  05DB                     __end_of_PinRead:
   689                           
   690                           	psect	text2
   691  05FC                     __ptext2:	
   692 ;; *************** function _LCD_Print *****************
   693 ;; Defined at:
   694 ;;		line 53 in file "App.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;  str             1    wreg     PTR unsigned char 
   697 ;;		 -> STR_1(11), 
   698 ;; Auto vars:     Size  Location     Type
   699 ;;  str             1   11[COMMON] PTR unsigned char 
   700 ;;		 -> STR_1(11), 
   701 ;;  i               1   12[COMMON] unsigned char 
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   711 ;;      Params:         0       0       0       0       0
   712 ;;      Locals:         2       0       0       0       0
   713 ;;      Temps:          1       0       0       0       0
   714 ;;      Totals:         3       0       0       0       0
   715 ;;Total ram usage:        3 bytes
   716 ;; Hardware stack levels used: 1
   717 ;; Hardware stack levels required when called: 2
   718 ;; This function calls:
   719 ;;		_LCD_Data
   720 ;; This function is called by:
   721 ;;		_main
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725  05FC                     _LCD_Print:	
   726                           ;psect for function _LCD_Print
   727                           
   728                           
   729                           ;incstack = 0
   730                           ; Regs used in _LCD_Print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   731                           ;LCD_Print@str stored from wreg
   732  05FC  00FB               	movwf	LCD_Print@str
   733  05FD                     l855:
   734                           
   735                           ;App.c: 54:     uint8_t i = 0;
   736  05FD  01FC               	clrf	LCD_Print@i
   737                           
   738                           ;App.c: 55:     while(str[i] != '\0'){
   739  05FE  2E10               	goto	l861
   740  05FF                     l857:
   741                           
   742                           ;App.c: 56:         LCD_Data(str[i]);
   743  05FF  087C               	movf	LCD_Print@i,w
   744  0600  077B               	addwf	LCD_Print@str,w
   745  0601  0084               	movwf	4
   746  0602  120A  118A  2003  120A  118A  	fcall	stringdir
   747  0607  120A  118A  279A  120A  118A  	fcall	_LCD_Data
   748  060C                     l859:
   749                           
   750                           ;App.c: 57:         i++;
   751  060C  3001               	movlw	1
   752  060D  00FA               	movwf	??_LCD_Print
   753  060E  087A               	movf	??_LCD_Print,w
   754  060F  07FC               	addwf	LCD_Print@i,f
   755  0610                     l861:
   756                           
   757                           ;App.c: 55:     while(str[i] != '\0'){
   758  0610  087C               	movf	LCD_Print@i,w
   759  0611  077B               	addwf	LCD_Print@str,w
   760  0612  0084               	movwf	4
   761  0613  120A  118A  2003  120A  118A  	fcall	stringdir
   762  0618  3A00               	xorlw	0
   763  0619  1D03               	skipz
   764  061A  2E1C               	goto	u241
   765  061B  2E1D               	goto	u240
   766  061C                     u241:
   767  061C  2DFF               	goto	l857
   768  061D                     u240:
   769  061D                     l52:
   770  061D  0008               	return
   771  061E                     __end_of_LCD_Print:
   772                           
   773                           	psect	text3
   774  079A                     __ptext3:	
   775 ;; *************** function _LCD_Data *****************
   776 ;; Defined at:
   777 ;;		line 143 in file "HAL.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;  value           1    wreg     unsigned char 
   780 ;; Auto vars:     Size  Location     Type
   781 ;;  value           1    9[COMMON] unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   791 ;;      Params:         0       0       0       0       0
   792 ;;      Locals:         1       0       0       0       0
   793 ;;      Temps:          2       0       0       0       0
   794 ;;      Totals:         3       0       0       0       0
   795 ;;Total ram usage:        3 bytes
   796 ;; Hardware stack levels used: 1
   797 ;; Hardware stack levels required when called: 1
   798 ;; This function calls:
   799 ;;		_PinWrite
   800 ;;		_PortWrite
   801 ;; This function is called by:
   802 ;;		_LCD_Print
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806  079A                     _LCD_Data:	
   807                           ;psect for function _LCD_Data
   808                           
   809                           
   810                           ;incstack = 0
   811                           ; Regs used in _LCD_Data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   812                           ;LCD_Data@value stored from wreg
   813  079A  00F9               	movwf	LCD_Data@value
   814  079B                     l823:
   815                           
   816                           ;HAL.c: 144:         PinWrite(0x05, 0, high);
   817  079B  01F0               	clrf	PinWrite@pin
   818  079C  01F1               	clrf	PinWrite@stat
   819  079D  0AF1               	incf	PinWrite@stat,f
   820  079E  3005               	movlw	5
   821  079F  120A  118A  261E  120A  118A  	fcall	_PinWrite
   822                           
   823                           ;HAL.c: 148:         PortWrite(0x08, (value & 0xf0));
   824  07A4  0879               	movf	LCD_Data@value,w
   825  07A5  39F0               	andlw	240
   826  07A6  00F7               	movwf	??_LCD_Data
   827  07A7  0877               	movf	??_LCD_Data,w
   828  07A8  00F0               	movwf	PortWrite@value
   829  07A9  3008               	movlw	8
   830  07AA  120A  118A  25B1  120A  118A  	fcall	_PortWrite
   831                           
   832                           ;HAL.c: 149:         PinWrite(0x05, 0 , high);
   833  07AF  01F0               	clrf	PinWrite@pin
   834  07B0  01F1               	clrf	PinWrite@stat
   835  07B1  0AF1               	incf	PinWrite@stat,f
   836  07B2  3005               	movlw	5
   837  07B3  120A  118A  261E  120A  118A  	fcall	_PinWrite
   838                           
   839                           ;HAL.c: 150:         PinWrite(0x05, 1, high);
   840  07B8  01F0               	clrf	PinWrite@pin
   841  07B9  0AF0               	incf	PinWrite@pin,f
   842  07BA  01F1               	clrf	PinWrite@stat
   843  07BB  0AF1               	incf	PinWrite@stat,f
   844  07BC  3005               	movlw	5
   845  07BD  120A  118A  261E  120A  118A  	fcall	_PinWrite
   846  07C2                     l825:
   847                           
   848                           ;HAL.c: 152:           _delay((unsigned long)((1)*(4000000/4000000.0)));
   849  07C2  0000               	nop
   850                           
   851                           ;HAL.c: 156:         PinWrite(0x05, 1, low);
   852  07C3  01F0               	clrf	PinWrite@pin
   853  07C4  0AF0               	incf	PinWrite@pin,f
   854  07C5  01F1               	clrf	PinWrite@stat
   855  07C6  3005               	movlw	5
   856  07C7  120A  118A  261E  120A  118A  	fcall	_PinWrite
   857  07CC                     l827:
   858                           
   859                           ;HAL.c: 158:           _delay((unsigned long)((100)*(4000000/4000000.0)));
   860  07CC  3021               	movlw	33
   861  07CD  00F7               	movwf	??_LCD_Data
   862  07CE                     u297:
   863  07CE  0BF7               	decfsz	??_LCD_Data,f
   864  07CF  2FCE               	goto	u297
   865  07D0                     l829:
   866                           
   867                           ;HAL.c: 162:         PortWrite(0x08, (value << 4));
   868  07D0  0879               	movf	LCD_Data@value,w
   869  07D1  00F7               	movwf	??_LCD_Data
   870  07D2  3003               	movlw	3
   871  07D3                     u235:
   872  07D3  1003               	clrc
   873  07D4  0DF7               	rlf	??_LCD_Data,f
   874  07D5  3EFF               	addlw	-1
   875  07D6  1D03               	skipz
   876  07D7  2FD3               	goto	u235
   877  07D8  1003               	clrc
   878  07D9  0D77               	rlf	??_LCD_Data,w
   879  07DA  00F8               	movwf	??_LCD_Data+1
   880  07DB  0878               	movf	??_LCD_Data+1,w
   881  07DC  00F0               	movwf	PortWrite@value
   882  07DD  3008               	movlw	8
   883  07DE  120A  118A  25B1  120A  118A  	fcall	_PortWrite
   884  07E3                     l831:
   885                           
   886                           ;HAL.c: 166:     PinWrite(0x05, 1, high);
   887  07E3  01F0               	clrf	PinWrite@pin
   888  07E4  0AF0               	incf	PinWrite@pin,f
   889  07E5  01F1               	clrf	PinWrite@stat
   890  07E6  0AF1               	incf	PinWrite@stat,f
   891  07E7  3005               	movlw	5
   892  07E8  120A  118A  261E  120A  118A  	fcall	_PinWrite
   893  07ED                     l833:
   894                           
   895                           ;HAL.c: 168:         _delay((unsigned long)((1)*(4000000/4000000.0)));
   896  07ED  0000               	nop
   897  07EE                     l835:
   898                           
   899                           ;HAL.c: 172:     PinWrite(0x05, 1, low);
   900  07EE  01F0               	clrf	PinWrite@pin
   901  07EF  0AF0               	incf	PinWrite@pin,f
   902  07F0  01F1               	clrf	PinWrite@stat
   903  07F1  3005               	movlw	5
   904  07F2  120A  118A  261E  120A  118A  	fcall	_PinWrite
   905                           
   906                           ;HAL.c: 174:         _delay((unsigned long)((100)*(4000000/4000000.0)));
   907  07F7  3021               	movlw	33
   908  07F8  00F7               	movwf	??_LCD_Data
   909  07F9                     u307:
   910  07F9  0BF7               	decfsz	??_LCD_Data,f
   911  07FA  2FF9               	goto	u307
   912  07FB                     l89:
   913  07FB  0008               	return
   914  07FC                     __end_of_LCD_Data:
   915                           
   916                           	psect	text4
   917  06DB                     __ptext4:	
   918 ;; *************** function _LCD_INIT *****************
   919 ;; Defined at:
   920 ;;		line 13 in file "App.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;		None
   923 ;; Auto vars:     Size  Location     Type
   924 ;;		None
   925 ;; Return value:  Size  Location     Type
   926 ;;                  1    wreg      void 
   927 ;; Registers used:
   928 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   934 ;;      Params:         0       0       0       0       0
   935 ;;      Locals:         0       0       0       0       0
   936 ;;      Temps:          2       0       0       0       0
   937 ;;      Totals:         2       0       0       0       0
   938 ;;Total ram usage:        2 bytes
   939 ;; Hardware stack levels used: 1
   940 ;; Hardware stack levels required when called: 2
   941 ;; This function calls:
   942 ;;		_LCD_Command
   943 ;;		_PinDir
   944 ;;		_PinWrite
   945 ;;		_PortDir
   946 ;;		_PortWrite
   947 ;; This function is called by:
   948 ;;		_main
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952  06DB                     _LCD_INIT:	
   953                           ;psect for function _LCD_INIT
   954                           
   955  06DB                     l839:	
   956                           ;incstack = 0
   957                           ; Regs used in _LCD_INIT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   958                           
   959                           
   960                           ;App.c: 15:         PortDir(0x08, output);
   961  06DB  01F0               	clrf	PortDir@state
   962  06DC  3008               	movlw	8
   963  06DD  120A  118A  25DB  120A  118A  	fcall	_PortDir
   964                           
   965                           ;App.c: 16:         PinDir(0x05, 0, output);
   966  06E2  01F0               	clrf	PinDir@pin
   967  06E3  01F1               	clrf	PinDir@state
   968  06E4  3005               	movlw	5
   969  06E5  120A  118A  2651  120A  118A  	fcall	_PinDir
   970                           
   971                           ;App.c: 17:         PinDir(0x05, 1, output);
   972  06EA  01F0               	clrf	PinDir@pin
   973  06EB  0AF0               	incf	PinDir@pin,f
   974  06EC  01F1               	clrf	PinDir@state
   975  06ED  3005               	movlw	5
   976  06EE  120A  118A  2651  120A  118A  	fcall	_PinDir
   977                           
   978                           ;App.c: 18:         PortWrite(0x08, 0x00);
   979  06F3  01F0               	clrf	PortWrite@value
   980  06F4  3008               	movlw	8
   981  06F5  120A  118A  25B1  120A  118A  	fcall	_PortWrite
   982                           
   983                           ;App.c: 19:         PinWrite(0x05, 1, low);
   984  06FA  01F0               	clrf	PinWrite@pin
   985  06FB  0AF0               	incf	PinWrite@pin,f
   986  06FC  01F1               	clrf	PinWrite@stat
   987  06FD  3005               	movlw	5
   988  06FE  120A  118A  261E  120A  118A  	fcall	_PinWrite
   989  0703                     l841:
   990                           
   991                           ;App.c: 30:             _delay((unsigned long)((2000)*(4000000/4000000.0)));
   992  0703  3003               	movlw	3
   993  0704  00FB               	movwf	??_LCD_INIT+1
   994  0705  3097               	movlw	151
   995  0706  00FA               	movwf	??_LCD_INIT
   996  0707                     u317:
   997  0707  0BFA               	decfsz	??_LCD_INIT,f
   998  0708  2F07               	goto	u317
   999  0709  0BFB               	decfsz	??_LCD_INIT+1,f
  1000  070A  2F07               	goto	u317
  1001  070B  2F0C               	nop2
  1002  070C                     l843:
  1003                           
  1004                           ;App.c: 35:             LCD_Command(0x33);
  1005  070C  3033               	movlw	51
  1006  070D  120A  118A  273A  120A  118A  	fcall	_LCD_Command
  1007  0712                     l845:
  1008                           
  1009                           ;App.c: 36:             LCD_Command(0x32);
  1010  0712  3032               	movlw	50
  1011  0713  120A  118A  273A  120A  118A  	fcall	_LCD_Command
  1012  0718                     l847:
  1013                           
  1014                           ;App.c: 37:             LCD_Command(0x28);
  1015  0718  3028               	movlw	40
  1016  0719  120A  118A  273A  120A  118A  	fcall	_LCD_Command
  1017  071E                     l849:
  1018                           
  1019                           ;App.c: 42:         LCD_Command(0x0E);
  1020  071E  300E               	movlw	14
  1021  071F  120A  118A  273A  120A  118A  	fcall	_LCD_Command
  1022  0724                     l851:
  1023                           
  1024                           ;App.c: 43:         LCD_Command(0x01);
  1025  0724  3001               	movlw	1
  1026  0725  120A  118A  273A  120A  118A  	fcall	_LCD_Command
  1027                           
  1028                           ;App.c: 45:             _delay((unsigned long)((2000)*(4000000/4000000.0)));
  1029  072A  3003               	movlw	3
  1030  072B  00FB               	movwf	??_LCD_INIT+1
  1031  072C  3097               	movlw	151
  1032  072D  00FA               	movwf	??_LCD_INIT
  1033  072E                     u327:
  1034  072E  0BFA               	decfsz	??_LCD_INIT,f
  1035  072F  2F2E               	goto	u327
  1036  0730  0BFB               	decfsz	??_LCD_INIT+1,f
  1037  0731  2F2E               	goto	u327
  1038  0732  2F33               	nop2
  1039  0733                     l853:
  1040                           
  1041                           ;App.c: 49:         LCD_Command(0x06);
  1042  0733  3006               	movlw	6
  1043  0734  120A  118A  273A  120A  118A  	fcall	_LCD_Command
  1044  0739                     l46:
  1045  0739  0008               	return
  1046  073A                     __end_of_LCD_INIT:
  1047                           
  1048                           	psect	text5
  1049  05DB                     __ptext5:	
  1050 ;; *************** function _PortDir *****************
  1051 ;; Defined at:
  1052 ;;		line 22 in file "HAL.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  Base            1    wreg     unsigned char 
  1055 ;;  state           1    0[COMMON] unsigned char 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  Base            1    4[COMMON] unsigned char 
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      void 
  1060 ;; Registers used:
  1061 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1067 ;;      Params:         1       0       0       0       0
  1068 ;;      Locals:         1       0       0       0       0
  1069 ;;      Temps:          3       0       0       0       0
  1070 ;;      Totals:         5       0       0       0       0
  1071 ;;Total ram usage:        5 bytes
  1072 ;; Hardware stack levels used: 1
  1073 ;; This function calls:
  1074 ;;		Nothing
  1075 ;; This function is called by:
  1076 ;;		_LCD_INIT
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080  05DB                     _PortDir:	
  1081                           ;psect for function _PortDir
  1082                           
  1083                           
  1084                           ;incstack = 0
  1085                           ; Regs used in _PortDir: [wreg-fsr0h+status,2+status,0]
  1086                           ;PortDir@Base stored from wreg
  1087  05DB  00F4               	movwf	PortDir@Base
  1088  05DC                     l799:
  1089                           
  1090                           ;HAL.c: 23:      if(state == output){
  1091  05DC  0870               	movf	PortDir@state,w
  1092  05DD  1D03               	btfss	3,2
  1093  05DE  2DE0               	goto	u211
  1094  05DF  2DE1               	goto	u210
  1095  05E0                     u211:
  1096  05E0  2DED               	goto	l803
  1097  05E1                     u210:
  1098  05E1                     l801:
  1099                           
  1100                           ;HAL.c: 25:         (*(volatile uint8_t *)((Base|0x80))) = 0x00;
  1101  05E1  3080               	movlw	128
  1102  05E2  0474               	iorwf	PortDir@Base,w
  1103  05E3  00F1               	movwf	??_PortDir
  1104  05E4  3000               	movlw	0
  1105  05E5  00F2               	movwf	??_PortDir+1
  1106  05E6  0871               	movf	??_PortDir,w
  1107  05E7  0084               	movwf	4
  1108  05E8  1783               	bsf	3,7
  1109  05E9  1C72               	btfss	??_PortDir+1,0
  1110  05EA  1383               	bcf	3,7
  1111  05EB  0180               	clrf	0
  1112                           
  1113                           ;HAL.c: 29:     }else{
  1114  05EC  2DFB               	goto	l64
  1115  05ED                     l803:
  1116                           
  1117                           ;HAL.c: 31:         (*(volatile uint8_t *)((Base|0x80))) = 0xFF;
  1118  05ED  30FF               	movlw	255
  1119  05EE  00F1               	movwf	??_PortDir
  1120  05EF  3080               	movlw	128
  1121  05F0  0474               	iorwf	PortDir@Base,w
  1122  05F1  00F2               	movwf	??_PortDir+1
  1123  05F2  3000               	movlw	0
  1124  05F3  00F3               	movwf	??_PortDir+2
  1125  05F4  0872               	movf	??_PortDir+1,w
  1126  05F5  0084               	movwf	4
  1127  05F6  1783               	bsf	3,7
  1128  05F7  1C73               	btfss	??_PortDir+2,0
  1129  05F8  1383               	bcf	3,7
  1130  05F9  0871               	movf	??_PortDir,w
  1131  05FA  0080               	movwf	0
  1132  05FB                     l64:
  1133  05FB  0008               	return
  1134  05FC                     __end_of_PortDir:
  1135                           
  1136                           	psect	text6
  1137  0651                     __ptext6:	
  1138 ;; *************** function _PinDir *****************
  1139 ;; Defined at:
  1140 ;;		line 6 in file "HAL.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;  Base            1    wreg     unsigned char 
  1143 ;;  pin             1    0[COMMON] unsigned char 
  1144 ;;  state           1    1[COMMON] unsigned char 
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;  Base            1    6[COMMON] unsigned char 
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  1    wreg      void 
  1149 ;; Registers used:
  1150 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1156 ;;      Params:         2       0       0       0       0
  1157 ;;      Locals:         1       0       0       0       0
  1158 ;;      Temps:          4       0       0       0       0
  1159 ;;      Totals:         7       0       0       0       0
  1160 ;;Total ram usage:        7 bytes
  1161 ;; Hardware stack levels used: 1
  1162 ;; This function calls:
  1163 ;;		Nothing
  1164 ;; This function is called by:
  1165 ;;		_main
  1166 ;;		_LCD_INIT
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170  0651                     _PinDir:	
  1171                           ;psect for function _PinDir
  1172                           
  1173                           
  1174                           ;incstack = 0
  1175                           ; Regs used in _PinDir: [wreg-fsr0h+status,2+status,0]
  1176                           ;PinDir@Base stored from wreg
  1177  0651  00F6               	movwf	PinDir@Base
  1178  0652                     l791:
  1179                           
  1180                           ;HAL.c: 7:     if(state == output){
  1181  0652  0871               	movf	PinDir@state,w
  1182  0653  1D03               	btfss	3,2
  1183  0654  2E56               	goto	u181
  1184  0655  2E57               	goto	u180
  1185  0656                     u181:
  1186  0656  2E70               	goto	l795
  1187  0657                     u180:
  1188  0657                     l793:
  1189                           
  1190                           ;HAL.c: 9:         ((*(volatile uint8_t *)((Base|0x80))) &= ~(1<<pin));
  1191  0657  3001               	movlw	1
  1192  0658  00F2               	movwf	??_PinDir
  1193  0659  0A70               	incf	PinDir@pin,w
  1194  065A  2E5D               	goto	u194
  1195  065B                     u195:
  1196  065B  1003               	clrc
  1197  065C  0DF2               	rlf	??_PinDir,f
  1198  065D                     u194:
  1199  065D  3EFF               	addlw	-1
  1200  065E  1D03               	skipz
  1201  065F  2E5B               	goto	u195
  1202  0660  0872               	movf	??_PinDir,w
  1203  0661  3AFF               	xorlw	255
  1204  0662  00F3               	movwf	??_PinDir+1
  1205  0663  3080               	movlw	128
  1206  0664  0476               	iorwf	PinDir@Base,w
  1207  0665  00F4               	movwf	??_PinDir+2
  1208  0666  3000               	movlw	0
  1209  0667  00F5               	movwf	??_PinDir+3
  1210  0668  0874               	movf	??_PinDir+2,w
  1211  0669  0084               	movwf	4
  1212  066A  1783               	bsf	3,7
  1213  066B  1C75               	btfss	??_PinDir+3,0
  1214  066C  1383               	bcf	3,7
  1215  066D  0873               	movf	??_PinDir+1,w
  1216  066E  0580               	andwf	0,f
  1217                           
  1218                           ;HAL.c: 13:     }else{
  1219  066F  2E87               	goto	l59
  1220  0670                     l795:
  1221                           
  1222                           ;HAL.c: 15:         ((*(volatile uint8_t *)((Base|0x80))) |= 1<<pin);
  1223  0670  3001               	movlw	1
  1224  0671  00F2               	movwf	??_PinDir
  1225  0672  0A70               	incf	PinDir@pin,w
  1226  0673  2E76               	goto	u204
  1227  0674                     u205:
  1228  0674  1003               	clrc
  1229  0675  0DF2               	rlf	??_PinDir,f
  1230  0676                     u204:
  1231  0676  3EFF               	addlw	-1
  1232  0677  1D03               	skipz
  1233  0678  2E74               	goto	u205
  1234  0679  0872               	movf	??_PinDir,w
  1235  067A  00F3               	movwf	??_PinDir+1
  1236  067B  3080               	movlw	128
  1237  067C  0476               	iorwf	PinDir@Base,w
  1238  067D  00F4               	movwf	??_PinDir+2
  1239  067E  3000               	movlw	0
  1240  067F  00F5               	movwf	??_PinDir+3
  1241  0680  0874               	movf	??_PinDir+2,w
  1242  0681  0084               	movwf	4
  1243  0682  1783               	bsf	3,7
  1244  0683  1C75               	btfss	??_PinDir+3,0
  1245  0684  1383               	bcf	3,7
  1246  0685  0873               	movf	??_PinDir+1,w
  1247  0686  0480               	iorwf	0,f
  1248  0687                     l59:
  1249  0687  0008               	return
  1250  0688                     __end_of_PinDir:
  1251                           
  1252                           	psect	text7
  1253  073A                     __ptext7:	
  1254 ;; *************** function _LCD_Command *****************
  1255 ;; Defined at:
  1256 ;;		line 101 in file "HAL.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  value           1    wreg     unsigned char 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  value           1    9[COMMON] unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1270 ;;      Params:         0       0       0       0       0
  1271 ;;      Locals:         1       0       0       0       0
  1272 ;;      Temps:          2       0       0       0       0
  1273 ;;      Totals:         3       0       0       0       0
  1274 ;;Total ram usage:        3 bytes
  1275 ;; Hardware stack levels used: 1
  1276 ;; Hardware stack levels required when called: 1
  1277 ;; This function calls:
  1278 ;;		_PinWrite
  1279 ;;		_PortWrite
  1280 ;; This function is called by:
  1281 ;;		_LCD_INIT
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285  073A                     _LCD_Command:	
  1286                           ;psect for function _LCD_Command
  1287                           
  1288                           
  1289                           ;incstack = 0
  1290                           ; Regs used in _LCD_Command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1291                           ;LCD_Command@value stored from wreg
  1292  073A  00F9               	movwf	LCD_Command@value
  1293  073B                     l805:
  1294                           
  1295                           ;HAL.c: 105:         PortWrite(0x08, (value & 0xf0));
  1296  073B  0879               	movf	LCD_Command@value,w
  1297  073C  39F0               	andlw	240
  1298  073D  00F7               	movwf	??_LCD_Command
  1299  073E  0877               	movf	??_LCD_Command,w
  1300  073F  00F0               	movwf	PortWrite@value
  1301  0740  3008               	movlw	8
  1302  0741  120A  118A  25B1  120A  118A  	fcall	_PortWrite
  1303                           
  1304                           ;HAL.c: 106:         PinWrite(0x05, 0, low);
  1305  0746  01F0               	clrf	PinWrite@pin
  1306  0747  01F1               	clrf	PinWrite@stat
  1307  0748  3005               	movlw	5
  1308  0749  120A  118A  261E  120A  118A  	fcall	_PinWrite
  1309                           
  1310                           ;HAL.c: 107:         PinWrite(0x05, 1, high);
  1311  074E  01F0               	clrf	PinWrite@pin
  1312  074F  0AF0               	incf	PinWrite@pin,f
  1313  0750  01F1               	clrf	PinWrite@stat
  1314  0751  0AF1               	incf	PinWrite@stat,f
  1315  0752  3005               	movlw	5
  1316  0753  120A  118A  261E  120A  118A  	fcall	_PinWrite
  1317  0758                     l807:
  1318                           
  1319                           ;HAL.c: 109:             _delay((unsigned long)((1)*(4000000/4000000.0)));
  1320  0758  0000               	nop
  1321                           
  1322                           ;HAL.c: 113:         PinWrite(0x05, 1, low);
  1323  0759  01F0               	clrf	PinWrite@pin
  1324  075A  0AF0               	incf	PinWrite@pin,f
  1325  075B  01F1               	clrf	PinWrite@stat
  1326  075C  3005               	movlw	5
  1327  075D  120A  118A  261E  120A  118A  	fcall	_PinWrite
  1328  0762                     l809:
  1329                           
  1330                           ;HAL.c: 115:             _delay((unsigned long)((100)*(4000000/4000000.0)));
  1331  0762  3021               	movlw	33
  1332  0763  00F7               	movwf	??_LCD_Command
  1333  0764                     u337:
  1334  0764  0BF7               	decfsz	??_LCD_Command,f
  1335  0765  2F64               	goto	u337
  1336  0766                     l811:
  1337                           
  1338                           ;HAL.c: 119:         PortWrite(0x08, (value << 4));
  1339  0766  0879               	movf	LCD_Command@value,w
  1340  0767  00F7               	movwf	??_LCD_Command
  1341  0768  3003               	movlw	3
  1342  0769                     u225:
  1343  0769  1003               	clrc
  1344  076A  0DF7               	rlf	??_LCD_Command,f
  1345  076B  3EFF               	addlw	-1
  1346  076C  1D03               	skipz
  1347  076D  2F69               	goto	u225
  1348  076E  1003               	clrc
  1349  076F  0D77               	rlf	??_LCD_Command,w
  1350  0770  00F8               	movwf	??_LCD_Command+1
  1351  0771  0878               	movf	??_LCD_Command+1,w
  1352  0772  00F0               	movwf	PortWrite@value
  1353  0773  3008               	movlw	8
  1354  0774  120A  118A  25B1  120A  118A  	fcall	_PortWrite
  1355  0779                     l813:
  1356                           
  1357                           ;HAL.c: 124:     PinWrite(0x05, 0, low);
  1358  0779  01F0               	clrf	PinWrite@pin
  1359  077A  01F1               	clrf	PinWrite@stat
  1360  077B  3005               	movlw	5
  1361  077C  120A  118A  261E  120A  118A  	fcall	_PinWrite
  1362  0781                     l815:
  1363                           
  1364                           ;HAL.c: 125:     PinWrite(0x05, 1, high);
  1365  0781  01F0               	clrf	PinWrite@pin
  1366  0782  0AF0               	incf	PinWrite@pin,f
  1367  0783  01F1               	clrf	PinWrite@stat
  1368  0784  0AF1               	incf	PinWrite@stat,f
  1369  0785  3005               	movlw	5
  1370  0786  120A  118A  261E  120A  118A  	fcall	_PinWrite
  1371  078B                     l817:
  1372                           
  1373                           ;HAL.c: 127:           _delay((unsigned long)((1)*(4000000/4000000.0)));
  1374  078B  0000               	nop
  1375  078C                     l819:
  1376                           
  1377                           ;HAL.c: 131:     PinWrite(0x05, 1, low);
  1378  078C  01F0               	clrf	PinWrite@pin
  1379  078D  0AF0               	incf	PinWrite@pin,f
  1380  078E  01F1               	clrf	PinWrite@stat
  1381  078F  3005               	movlw	5
  1382  0790  120A  118A  261E  120A  118A  	fcall	_PinWrite
  1383  0795                     l821:
  1384                           
  1385                           ;HAL.c: 133:           _delay((unsigned long)((100)*(4000000/4000000.0)));
  1386  0795  3021               	movlw	33
  1387  0796  00F7               	movwf	??_LCD_Command
  1388  0797                     u347:
  1389  0797  0BF7               	decfsz	??_LCD_Command,f
  1390  0798  2F97               	goto	u347
  1391  0799                     l86:
  1392  0799  0008               	return
  1393  079A                     __end_of_LCD_Command:
  1394                           
  1395                           	psect	text8
  1396  05B1                     __ptext8:	
  1397 ;; *************** function _PortWrite *****************
  1398 ;; Defined at:
  1399 ;;		line 38 in file "HAL.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;  Base            1    wreg     unsigned char 
  1402 ;;  value           1    0[COMMON] unsigned char 
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;  Base            1    4[COMMON] unsigned char 
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      void 
  1407 ;; Registers used:
  1408 ;;		wreg, fsr0l, fsr0h
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1414 ;;      Params:         1       0       0       0       0
  1415 ;;      Locals:         1       0       0       0       0
  1416 ;;      Temps:          3       0       0       0       0
  1417 ;;      Totals:         5       0       0       0       0
  1418 ;;Total ram usage:        5 bytes
  1419 ;; Hardware stack levels used: 1
  1420 ;; This function calls:
  1421 ;;		Nothing
  1422 ;; This function is called by:
  1423 ;;		_LCD_INIT
  1424 ;;		_LCD_Command
  1425 ;;		_LCD_Data
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429  05B1                     _PortWrite:	
  1430                           ;psect for function _PortWrite
  1431                           
  1432                           
  1433                           ;incstack = 0
  1434                           ; Regs used in _PortWrite: [wregfsr0]
  1435                           ;PortWrite@Base stored from wreg
  1436  05B1  00F4               	movwf	PortWrite@Base
  1437  05B2                     l789:
  1438                           
  1439                           ;HAL.c: 41:         (*(volatile uint8_t *)(Base)) = value;
  1440  05B2  0870               	movf	PortWrite@value,w
  1441  05B3  00F1               	movwf	??_PortWrite
  1442  05B4  0874               	movf	PortWrite@Base,w
  1443  05B5  00F2               	movwf	??_PortWrite+1
  1444  05B6  01F3               	clrf	??_PortWrite+2
  1445  05B7  0872               	movf	??_PortWrite+1,w
  1446  05B8  0084               	movwf	4
  1447  05B9  1783               	bsf	3,7
  1448  05BA  1C73               	btfss	??_PortWrite+2,0
  1449  05BB  1383               	bcf	3,7
  1450  05BC  0871               	movf	??_PortWrite,w
  1451  05BD  0080               	movwf	0
  1452  05BE                     l67:
  1453  05BE  0008               	return
  1454  05BF                     __end_of_PortWrite:
  1455                           
  1456                           	psect	text9
  1457  061E                     __ptext9:	
  1458 ;; *************** function _PinWrite *****************
  1459 ;; Defined at:
  1460 ;;		line 48 in file "HAL.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;  Base            1    wreg     unsigned char 
  1463 ;;  pin             1    0[COMMON] unsigned char 
  1464 ;;  stat            1    1[COMMON] unsigned char 
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;  Base            1    6[COMMON] unsigned char 
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  1    wreg      void 
  1469 ;; Registers used:
  1470 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1476 ;;      Params:         2       0       0       0       0
  1477 ;;      Locals:         1       0       0       0       0
  1478 ;;      Temps:          4       0       0       0       0
  1479 ;;      Totals:         7       0       0       0       0
  1480 ;;Total ram usage:        7 bytes
  1481 ;; Hardware stack levels used: 1
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_main
  1486 ;;		_LCD_INIT
  1487 ;;		_LCD_Command
  1488 ;;		_LCD_Data
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492  061E                     _PinWrite:	
  1493                           ;psect for function _PinWrite
  1494                           
  1495                           
  1496                           ;incstack = 0
  1497                           ; Regs used in _PinWrite: [wreg-fsr0h+status,2+status,0]
  1498                           ;PinWrite@Base stored from wreg
  1499  061E  00F6               	movwf	PinWrite@Base
  1500  061F                     l783:
  1501                           
  1502                           ;HAL.c: 50:     if(stat == high){
  1503  061F  0371               	decf	PinWrite@stat,w
  1504  0620  1D03               	btfss	3,2
  1505  0621  2E23               	goto	u151
  1506  0622  2E24               	goto	u150
  1507  0623                     u151:
  1508  0623  2E3A               	goto	l787
  1509  0624                     u150:
  1510  0624                     l785:
  1511                           
  1512                           ;HAL.c: 52:         ((*(volatile uint8_t *)(Base)) |= 1<<pin);
  1513  0624  3001               	movlw	1
  1514  0625  00F2               	movwf	??_PinWrite
  1515  0626  0A70               	incf	PinWrite@pin,w
  1516  0627  2E2A               	goto	u164
  1517  0628                     u165:
  1518  0628  1003               	clrc
  1519  0629  0DF2               	rlf	??_PinWrite,f
  1520  062A                     u164:
  1521  062A  3EFF               	addlw	-1
  1522  062B  1D03               	skipz
  1523  062C  2E28               	goto	u165
  1524  062D  0872               	movf	??_PinWrite,w
  1525  062E  00F3               	movwf	??_PinWrite+1
  1526  062F  0876               	movf	PinWrite@Base,w
  1527  0630  00F4               	movwf	??_PinWrite+2
  1528  0631  01F5               	clrf	??_PinWrite+3
  1529  0632  0874               	movf	??_PinWrite+2,w
  1530  0633  0084               	movwf	4
  1531  0634  1783               	bsf	3,7
  1532  0635  1C75               	btfss	??_PinWrite+3,0
  1533  0636  1383               	bcf	3,7
  1534  0637  0873               	movf	??_PinWrite+1,w
  1535  0638  0480               	iorwf	0,f
  1536                           
  1537                           ;HAL.c: 56:     }else{
  1538  0639  2E50               	goto	l72
  1539  063A                     l787:
  1540                           
  1541                           ;HAL.c: 58:         ((*(volatile uint8_t *)(Base)) &= ~(1<<pin));
  1542  063A  3001               	movlw	1
  1543  063B  00F2               	movwf	??_PinWrite
  1544  063C  0A70               	incf	PinWrite@pin,w
  1545  063D  2E40               	goto	u174
  1546  063E                     u175:
  1547  063E  1003               	clrc
  1548  063F  0DF2               	rlf	??_PinWrite,f
  1549  0640                     u174:
  1550  0640  3EFF               	addlw	-1
  1551  0641  1D03               	skipz
  1552  0642  2E3E               	goto	u175
  1553  0643  0872               	movf	??_PinWrite,w
  1554  0644  3AFF               	xorlw	255
  1555  0645  00F3               	movwf	??_PinWrite+1
  1556  0646  0876               	movf	PinWrite@Base,w
  1557  0647  00F4               	movwf	??_PinWrite+2
  1558  0648  01F5               	clrf	??_PinWrite+3
  1559  0649  0874               	movf	??_PinWrite+2,w
  1560  064A  0084               	movwf	4
  1561  064B  1783               	bsf	3,7
  1562  064C  1C75               	btfss	??_PinWrite+3,0
  1563  064D  1383               	bcf	3,7
  1564  064E  0873               	movf	??_PinWrite+1,w
  1565  064F  0580               	andwf	0,f
  1566  0650                     l72:
  1567  0650  0008               	return
  1568  0651                     __end_of_PinWrite:
  1569                           
  1570                           	psect	text10
  1571  0598                     __ptext10:	
  1572 ;; *************** function _GPIO_INIT *****************
  1573 ;; Defined at:
  1574 ;;		line 3 in file "App.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1588 ;;      Params:         0       0       0       0       0
  1589 ;;      Locals:         0       0       0       0       0
  1590 ;;      Temps:          1       0       0       0       0
  1591 ;;      Totals:         1       0       0       0       0
  1592 ;;Total ram usage:        1 bytes
  1593 ;; Hardware stack levels used: 1
  1594 ;; Hardware stack levels required when called: 1
  1595 ;; This function calls:
  1596 ;;		_SelectADC
  1597 ;; This function is called by:
  1598 ;;		_main
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602  0598                     _GPIO_INIT:	
  1603                           ;psect for function _GPIO_INIT
  1604                           
  1605  0598                     l837:	
  1606                           ;incstack = 0
  1607                           ; Regs used in _GPIO_INIT: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1608                           
  1609                           
  1610                           ;App.c: 6:     SelectADC (0x9F, 0x06);
  1611  0598  3006               	movlw	6
  1612  0599  00F5               	movwf	??_GPIO_INIT
  1613  059A  0875               	movf	??_GPIO_INIT,w
  1614  059B  00F0               	movwf	SelectADC@value
  1615  059C  309F               	movlw	159
  1616  059D  120A  118A  25A3  120A  118A  	fcall	_SelectADC
  1617  05A2                     l43:
  1618  05A2  0008               	return
  1619  05A3                     __end_of_GPIO_INIT:
  1620                           
  1621                           	psect	text11
  1622  05A3                     __ptext11:	
  1623 ;; *************** function _SelectADC *****************
  1624 ;; Defined at:
  1625 ;;		line 87 in file "HAL.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;  Base            1    wreg     unsigned char 
  1628 ;;  value           1    0[COMMON] unsigned char 
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;  Base            1    4[COMMON] unsigned char 
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1640 ;;      Params:         1       0       0       0       0
  1641 ;;      Locals:         1       0       0       0       0
  1642 ;;      Temps:          3       0       0       0       0
  1643 ;;      Totals:         5       0       0       0       0
  1644 ;;Total ram usage:        5 bytes
  1645 ;; Hardware stack levels used: 1
  1646 ;; This function calls:
  1647 ;;		Nothing
  1648 ;; This function is called by:
  1649 ;;		_GPIO_INIT
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653  05A3                     _SelectADC:	
  1654                           ;psect for function _SelectADC
  1655                           
  1656                           
  1657                           ;incstack = 0
  1658                           ; Regs used in _SelectADC: [wreg-fsr0h+status,2+status,0]
  1659                           ;SelectADC@Base stored from wreg
  1660  05A3  00F4               	movwf	SelectADC@Base
  1661  05A4                     l797:
  1662                           
  1663                           ;HAL.c: 88:     (*(volatile uint8_t *)(Base)) |= value;
  1664  05A4  0870               	movf	SelectADC@value,w
  1665  05A5  00F1               	movwf	??_SelectADC
  1666  05A6  0874               	movf	SelectADC@Base,w
  1667  05A7  00F2               	movwf	??_SelectADC+1
  1668  05A8  01F3               	clrf	??_SelectADC+2
  1669  05A9  0872               	movf	??_SelectADC+1,w
  1670  05AA  0084               	movwf	4
  1671  05AB  1783               	bsf	3,7
  1672  05AC  1C73               	btfss	??_SelectADC+2,0
  1673  05AD  1383               	bcf	3,7
  1674  05AE  0871               	movf	??_SelectADC,w
  1675  05AF  0480               	iorwf	0,f
  1676  05B0                     l83:
  1677  05B0  0008               	return
  1678  05B1                     __end_of_SelectADC:
  1679  007E                     btemp	set	126	;btemp
  1680  007E                     wtemp0	set	126
  1681                           
  1682                           	psect	idloc
  1683                           
  1684                           ;Config register IDLOC0 @ 0x2000
  1685                           ;	unspecified, using default values
  1686  2000                     	org	8192
  1687  2000  3FFF               	dw	16383
  1688                           
  1689                           ;Config register IDLOC1 @ 0x2001
  1690                           ;	unspecified, using default values
  1691  2001                     	org	8193
  1692  2001  3FFF               	dw	16383
  1693                           
  1694                           ;Config register IDLOC2 @ 0x2002
  1695                           ;	unspecified, using default values
  1696  2002                     	org	8194
  1697  2002  3FFF               	dw	16383
  1698                           
  1699                           ;Config register IDLOC3 @ 0x2003
  1700                           ;	unspecified, using default values
  1701  2003                     	org	8195
  1702  2003  3FFF               	dw	16383
  1703                           
  1704                           	psect	config
  1705                           
  1706                           ;Config register CONFIG @ 0x2007
  1707                           ;	unspecified, using default values
  1708                           ;	Oscillator Selection bits
  1709                           ;	FOSC = 0x3, unprogrammed default
  1710                           ;	Watchdog Timer Enable bit
  1711                           ;	WDTE = 0x1, unprogrammed default
  1712                           ;	Power-up Timer Enable bit
  1713                           ;	PWRTE = 0x1, unprogrammed default
  1714                           ;	Brown-out Reset Enable bit
  1715                           ;	BOREN = 0x1, unprogrammed default
  1716                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1717                           ;	LVP = 0x1, unprogrammed default
  1718                           ;	Data EEPROM Memory Code Protection bit
  1719                           ;	CPD = 0x1, unprogrammed default
  1720                           ;	Flash Program Memory Write Enable bits
  1721                           ;	WRT = 0x3, unprogrammed default
  1722                           ;	In-Circuit Debugger Mode bit
  1723                           ;	DEBUG = 0x1, unprogrammed default
  1724                           ;	Flash Program Memory Code Protection bit
  1725                           ;	CP = 0x1, unprogrammed default
  1726  2007                     	org	8199
  1727  2007  3FFF               	dw	16383

Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Print@str	PTR unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_LCD_Print
    _LCD_Print->_LCD_Data
    _LCD_Data->_PinWrite
    _LCD_INIT->_LCD_Command
    _LCD_Command->_PinWrite
    _GPIO_INIT->_SelectADC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   12861
                                              0 BANK0      3     3      0
                          _GPIO_INIT
                           _LCD_INIT
                          _LCD_Print
                             _PinDir
                            _PinRead
                           _PinWrite
 ---------------------------------------------------------------------------------
 (1) _PinRead                                              5     4      1     120
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _LCD_Print                                            3     3      0    2981
                                             10 COMMON     3     3      0
                           _LCD_Data
 ---------------------------------------------------------------------------------
 (2) _LCD_Data                                             3     3      0    2858
                                              7 COMMON     3     3      0
                           _PinWrite
                          _PortWrite
 ---------------------------------------------------------------------------------
 (1) _LCD_INIT                                             2     2      0    6532
                                             10 COMMON     2     2      0
                        _LCD_Command
                             _PinDir
                           _PinWrite
                            _PortDir
                          _PortWrite
 ---------------------------------------------------------------------------------
 (2) _PortDir                                              5     4      1     142
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _PinDir                                               7     5      2     718
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0    2858
                                              7 COMMON     3     3      0
                           _PinWrite
                          _PortWrite
 ---------------------------------------------------------------------------------
 (3) _PortWrite                                            5     4      1     424
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _PinWrite                                             7     5      2    2390
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (1) _GPIO_INIT                                            1     1      0     120
                                              5 COMMON     1     1      0
                          _SelectADC
 ---------------------------------------------------------------------------------
 (2) _SelectADC                                            5     4      1     120
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIO_INIT
     _SelectADC
   _LCD_INIT
     _LCD_Command
       _PinWrite
       _PortWrite
     _PinDir
     _PinWrite
     _PortDir
     _PortWrite
   _LCD_Print
     _LCD_Data
       _PinWrite
       _PortWrite
   _PinDir
   _PinRead
   _PinWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Apr 18 17:54:19 2023

                      pc 0002             ?_LCD_Command 0070                       l43 05A2  
                     l19 06AA                       l52 061D                       l46 0739  
                     l72 0650                       l64 05FB                       l83 05B0  
                     l67 05BE                       l59 0687                       l76 05DA  
                     l86 0799                       l89 07FB                       fsr 0004  
                    l801 05E1                      l811 0766                      l803 05ED  
                    l821 0795                      l813 0779                      l805 073B  
                    l815 0781                      l807 0758                      l831 07E3  
                    l823 079B                      l817 078B                      l809 0762  
                    l841 0703                      l833 07ED                      l825 07C2  
                    l819 078C                      l851 0724                      l843 070C  
                    l835 07EE                      l827 07CC                      l837 0598  
                    l853 0733                      l845 0712                      l829 07D0  
                    l861 0610                      l783 061F                      l791 0652  
                    l847 0718                      l839 06DB                      l855 05FD  
                    l871 05D9                      l863 05C0                      l785 0624  
                    l793 0657                      l849 071E                      l857 05FF  
                    l865 05D7                      l881 06CF                      l787 063A  
                    l795 0670                      l859 060C                      l875 0688  
                    l797 05A4                      l789 05B2                      l877 06B7  
                    l799 05DC                      l879 06C0                      u210 05E1  
                    u211 05E0                      u204 0676                      u205 0674  
                    u150 0624                      u151 0623                      u240 061D  
                    u225 0769                      u241 061C                      u307 07F9  
                    u235 07D3                      u164 062A                      u180 0657  
                    u260 05D7                      u165 0628                      u181 0656  
                    u317 0707                      u261 05D6                      u174 0640  
                    u254 05CE                      u270 06B7                      u175 063E  
                    u327 072E                      u255 05CC                      u271 06B6  
                    u337 0764                      u194 065D                      u347 0797  
                    u195 065B                      u287 06C8                      u297 07CE  
                    fsr0 0004                      indf 0000                     STR_1 0009  
                   _main 0688                     btemp 007E            SelectADC@Base 0074  
                   start 0000               PinDir@Base 0076          __end_of_PinRead 05DB  
       __end_of_LCD_INIT 073A         __end_of_LCD_Data 07FC          __end_of_PortDir 05FC  
                  ?_main 0070               PinRead@pin 0070                    pclath 000A  
                  status 0003                    wtemp0 007E           SelectADC@value 0070  
        __initialization 07FC             __end_of_main 06DB              PinDir@state 0071  
                 ??_main 0020         __end_of_PinWrite 0651        __end_of_GPIO_INIT 05A3  
      __end_of_LCD_Print 061E            LCD_Data@value 0079              PinRead@Base 0074  
           LCD_Print@str 007B                ??_PinRead 0071                   _PinDir 0651  
              ??_PortDir 0071              PinWrite@pin 0070                ?_LCD_INIT 0070  
              ?_LCD_Data 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
      __end_of_SelectADC 05B1               ??_LCD_INIT 007A               ??_LCD_Data 0077  
              ?_PinWrite 0070                  ?_PinDir 0070        __end_of_PortWrite 05BF  
             __pmaintext 0688               __stringtab 0003               ??_PinWrite 0072  
                _PinRead 05BF              PortDir@Base 0074                  _PortDir 05DB  
                __ptext1 05BF                  __ptext2 05FC                  __ptext3 079A  
                __ptext4 06DB                  __ptext5 05DB                  __ptext6 0651  
                __ptext7 073A                  __ptext8 05B1                  __ptext9 061E  
              _GPIO_INIT 0598                _LCD_Print 05FC     end_of_initialization 07FC  
           PinWrite@Base 0076             PinWrite@stat 0071               ?_GPIO_INIT 0070  
             ?_LCD_Print 0070                PinDir@pin 0070           __end_of_PinDir 0688  
          ??_LCD_Command 0077               LCD_Print@i 007C      start_initialization 07FC  
              _SelectADC 05A3                 ??_PinDir 0072                _PortWrite 05B1  
    __end_of_LCD_Command 079A                ___latbits 0002            __pcstackBANK0 0020  
            ??_GPIO_INIT 0075              ??_LCD_Print 007A               ?_SelectADC 0070  
               ?_PinRead 0070                 ?_PortDir 0070           PortWrite@value 0070  
             ?_PortWrite 0070                __pstrings 0003                 _LCD_INIT 06DB  
               _LCD_Data 079A              _LCD_Command 073A              __stringbase 0008  
            ??_SelectADC 0071                 _PinWrite 061E             PortDir@state 0070  
            ??_PortWrite 0071         LCD_Command@value 0079       __end_of__stringtab 0009  
          PortWrite@Base 0074                 __ptext10 0598                 __ptext11 05A3  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
